package eei {
    const XLEN: u32 = 32;
    const ILEN: u32 = 32;

    type UIntX  = logic       <XLEN>;
    type UInt32 = logic       <32>  ;
    type UInt64 = logic       <64>  ;
    type SIntX  = signed logic<XLEN>;
    type SInt32 = signed logic<32>  ;
    type SInt64 = signed logic<64>  ;
    type Inst   = logic       <ILEN>;
    type Addr   = logic       <XLEN>;

    // メモリのデータ幅
    const MEM_DATA_WIDTH: u32 = 32;
    // メモリのアドレス幅
    const MEM_ADDR_WIDTH: u32 = 16;

    // opcode
    const OP_LUI   : logic<7> = 7'b0110111;
    const OP_AUIPC : logic<7> = 7'b0010111;
    const OP_OP    : logic<7> = 7'b0110011;
    const OP_OP_IMM: logic<7> = 7'b0010011;
    const OP_JAL   : logic<7> = 7'b1101111;
    const OP_JALR  : logic<7> = 7'b1100111;
    const OP_BRANCH: logic<7> = 7'b1100011;
    const OP_LOAD  : logic<7> = 7'b0000011;
    const OP_STORE : logic<7> = 7'b0100011;
    const OP_SYSTEM: logic<7> = 7'b1110011;

// #@@range_begin(addr)
    // CSRのアドレス
    enum CsrAddr: logic<12> {
        MTVEC = 12'h305,
        @<b>|MEPC = 12'h341,|
        @<b>|MCAUSE = 12'h342,|
    }
// #@@range_end(addr)

// #@@range_begin(cause)
    enum CsrCause: UIntX {
        ENVIRONMENT_CALL_FROM_M_MODE = 11,
    }
// #@@range_end(cause)
}

import eei::*;
import corectrl::*;

module alubr (
    cmd      : input  BrCmd,
    is_signed: input  logic,
    op1_data : input  UIntX,
    op2_data : input  UIntX,
    take     : output logic,
) {
    let op1_s: SIntX = op1_data;
    let op2_s: SIntX = op2_data;

    always_comb {
        case (cmd) {
            BrCmd::BEQ: take = op1_data === op2_data;
            BrCmd::BNE: take = !(op1_data === op2_data);
            BrCmd::BLT: take = if (is_signed) {
                            op1_s <: op2_s
                        } else {
                            op1_data <: op2_data
                        };
            BrCmd::BGE: take = if (is_signed) {
                            !(op1_s <: op2_s)
                        } else {
                            !(op1_data <: op2_data)
                        };
            default: take = 0;
        }
    }
}
